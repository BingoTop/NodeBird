{"ast":null,"code":"var _jsxFileName = \"/home/jaewon/Desktop/react-nodebird-front/components/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nconst ButtonWrapper = styled.div`\n    margin-top:10px;\n`;\n\nconst LoginForm = ({\n  setIsLoggendIn\n}) => {\n  const {\n    0: id,\n    1: setId\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setpassword\n  } = useState(\"\");\n  const onChangeId = useCallback(e => {\n    setId(e.target.value);\n  }, []); //onChange는 useCallback을 써야 최적화할 수 있음.\n\n  const onChangePassword = useCallback(e => {\n    setpassword(e.target.value);\n  }, []); // 태그에 style에 객체 넣으면 리렌더링할때마다 계속 객체를 생성해서 비효율적\n\n  const onSubmitForm = useCallback(() => {\n    console.log(id, password);\n    setIsLoggendIn(true);\n  }, [id, password]);\n  return __jsx(Form, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \" \\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/jaewon/Desktop/react-nodebird-front/components/LoginForm.js"],"names":["React","useCallback","useState","Form","Input","Button","Link","styled","ButtonWrapper","div","LoginForm","setIsLoggendIn","id","setId","password","setpassword","onChangeId","e","target","value","onChangePassword","onSubmitForm","console","log"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\n\nconst ButtonWrapper = styled.div`\n    margin-top:10px;\n`;\n\nconst LoginForm = ({ setIsLoggendIn }) => {\n    const [id, setId] = useState(\"\");\n    const [password, setpassword] = useState(\"\");\n\n    const onChangeId = useCallback((e) => {\n        setId(e.target.value);\n    }, []); //onChange는 useCallback을 써야 최적화할 수 있음.\n\n    const onChangePassword = useCallback((e) => {\n        setpassword(e.target.value);\n    }, []);\n    // 태그에 style에 객체 넣으면 리렌더링할때마다 계속 객체를 생성해서 비효율적\n    const onSubmitForm = useCallback(() => {\n        console.log(id, password);\n        setIsLoggendIn(true);\n    }, [id, password]);\n\n    return (\n        <Form onFinish={onSubmitForm}>\n            <div>\n                <label htmlFor=\"user-id\">아이디</label>\n                <br />\n                <Input\n                    name=\"user-id\"\n                    value={id}\n                    onChange={onChangeId}\n                    required />\n            </div>\n            <div>\n                <label htmlFor=\"user-password\">비밀번호</label>\n                <br />\n                <Input\n                    name=\"user-password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={onChangePassword}\n                    required />\n            </div>\n            <ButtonWrapper>\n                <Button type=\"primary\" htmlType=\"submit\" loading={false}> 로그인</Button>\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\n            </ButtonWrapper>\n        </Form>\n    );\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}